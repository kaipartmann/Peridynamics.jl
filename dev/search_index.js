var documenterSearchIndex = {"docs":
[{"location":"api_public/#Public-API","page":"Public API","title":"Public API","text":"","category":"section"},{"location":"api_public/","page":"Public API","title":"Public API","text":"Here, all exported types and methods are listed, which the user needs when using the package.","category":"page"},{"location":"api_public/","page":"Public API","title":"Public API","text":"","category":"page"},{"location":"api_public/","page":"Public API","title":"Public API","text":"Pages = [\"api_public.md\"]","category":"page"},{"location":"api_public/#Types","page":"Public API","title":"Types","text":"","category":"section"},{"location":"api_public/","page":"Public API","title":"Public API","text":"","category":"page"},{"location":"api_public/#Functions","page":"Public API","title":"Functions","text":"","category":"section"},{"location":"api_public/","page":"Public API","title":"Public API","text":"","category":"page"},{"location":"howto_visualization/#visualization","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"","category":"section"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"The following section explains a few visualization basics with ParaView (ParaView 5.10.1 on macOS Monterey).","category":"page"},{"location":"howto_visualization/#Basics","page":"Visualization with ParaView","title":"Basics","text":"","category":"section"},{"location":"howto_visualization/#1.-Load-the-results","page":"Visualization with ParaView","title":"1. Load the results","text":"","category":"section"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"Load the resulting .vtu files into ParaView with File rightarrow Open.","category":"page"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"<img src=\"../assets/ParaViewTutorial1.png\" width=\"600\" />","category":"page"},{"location":"howto_visualization/#2.-Select-the-time-array","page":"Visualization with ParaView","title":"2. Select the time array","text":"","category":"section"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"Select the time array and all the parameters you want to analyze and then Apply.","category":"page"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"<img src=\"../assets/ParaViewTutorial2.png\" width=\"1000\" />","category":"page"},{"location":"howto_visualization/#3.-Representation-and-coloring","page":"Visualization with ParaView","title":"3. Representation and coloring","text":"","category":"section"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"Change the representation to Points and then choose the coloring parameter.","category":"page"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"<img src=\"../assets/ParaViewTutorial3.png\" width=\"1000\" />","category":"page"},{"location":"howto_visualization/#4.-Point-styling","page":"Visualization with ParaView","title":"4. Point styling","text":"","category":"section"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"Activate the setting to render points as spheres and set an appropriate point size.","category":"page"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"<img src=\"../assets/ParaViewTutorial4.png\" width=\"1000\" />","category":"page"},{"location":"howto_visualization/#5.-Legend-styling","page":"Visualization with ParaView","title":"5. Legend styling","text":"","category":"section"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"By default, the legend limits are set for the current range of the coloring parameter. In this example, for the initial time step all damage values are zero so strange legend limits appear.","category":"page"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"<img src=\"../assets/ParaViewTutorial5.png\" width=\"1000\" />","category":"page"},{"location":"howto_visualization/#6.-Save-animation","page":"Visualization with ParaView","title":"6. Save animation","text":"","category":"section"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"To generate a animation, use File rightarrow Save Animation... and follow the instructions.","category":"page"},{"location":"howto_visualization/#Additional-Learning-Resources","page":"Visualization with ParaView","title":"Additional Learning Resources","text":"","category":"section"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"ParaView has a great documentation and a lot of resources for learning. For example, see:","category":"page"},{"location":"howto_visualization/","page":"Visualization with ParaView","title":"Visualization with ParaView","text":"ParaView Documentation\nParaView User's Guide","category":"page"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"EditURL = \"../literate/howto_single_body_analysis.jl\"","category":"page"},{"location":"generated/howto_single_body_analysis/#howto_single_body_analysis","page":"Single body analysis","title":"Single body analysis","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Short guide on how to run a peridynamics analysis with only one body.","category":"page"},{"location":"generated/howto_single_body_analysis/#Steps","page":"Single body analysis","title":"Steps","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/#1.-Define-a-point-cloud","page":"Single body analysis","title":"1. Define a point cloud","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Please refer to the guide on how to use point clouds.","category":"page"},{"location":"generated/howto_single_body_analysis/#2.-Set-material-properties","page":"Single body analysis","title":"2. Set material properties","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Please refer to the guide on how to use material formulations.","category":"page"},{"location":"generated/howto_single_body_analysis/#3.-Create-predefined-cracks-[optional]","page":"Single body analysis","title":"3. Create predefined cracks [optional]","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Please refer to the guide on how to use predefined cracks.","category":"page"},{"location":"generated/howto_single_body_analysis/#4.-Assign-boundary-and-initial-conditions-[optional]","page":"Single body analysis","title":"4. Assign boundary and initial conditions [optional]","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/#Boundary-conditions,-updated-every-time-step","page":"Single body analysis","title":"Boundary conditions, updated every time step","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Velocity boundary condition, VelocityBC\nForce density boundary condition ForceDensityBC\nPosition dependend velocity boundary condition, PosDepVelBC","category":"page"},{"location":"generated/howto_single_body_analysis/#Initial-conditions,-only-assigned-before-time-loop","page":"Single body analysis","title":"Initial conditions, only assigned before time-loop","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Velocity initial condition VelocityIC","category":"page"},{"location":"generated/howto_single_body_analysis/#5.-Assign-a-temporal-discretization","page":"Single body analysis","title":"5. Assign a temporal discretization","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Create either a VelocityVerlet or a DynamicRelaxation instance.","category":"page"},{"location":"generated/howto_single_body_analysis/#6.-Choose-export-settings","page":"Single body analysis","title":"6. Choose export settings","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Create a ExportSettings instance.","category":"page"},{"location":"generated/howto_single_body_analysis/#7.-Create-the-simulation-job","page":"Single body analysis","title":"7. Create the simulation job","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Create a PDSingleBodyAnalysis instance and choose a simulation name.","category":"page"},{"location":"generated/howto_single_body_analysis/#8.-Run-the-simulation-job","page":"Single body analysis","title":"8. Run the simulation job","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Run the simulation with the submit function.","category":"page"},{"location":"generated/howto_single_body_analysis/#Examples","page":"Single body analysis","title":"Examples","text":"","category":"section"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Please refer to the following tutorials:","category":"page"},{"location":"generated/howto_single_body_analysis/","page":"Single body analysis","title":"Single body analysis","text":"Mode I tension quasi-static\nMode I tension dynamic\nMode I tension dynamic with predefined crack","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"EditURL = \"../literate/tutorial_tension_dynfrac.jl\"","category":"page"},{"location":"generated/tutorial_tension_dynfrac/#tutorial_tension_dynfrac","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"","category":"section"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"Import the package:","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"using Peridynamics","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"Read and convert the Abaqus FEM mesh of a tensile test:","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"# insert your correct path to the downloaded mesh file!\npc = read_inp(joinpath(@__DIR__, \"..\", \"assets\", \"TensileTestMesh.inp\"))","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"(Image: )","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"Do not allow failure in the entire point cloud:","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"pc.failure_flag .= false","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"Define a bond-based material with","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"Horizon delta = 001mathrmm\nDensity rho = 2700mathrmkgmathrmm^-3\nYoungs modulus E = 70 times 10^9  mathrmPa\nGriffith's parameter G_c = 100  mathrmN  mathrmm^-1","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"mat = BBMaterial(; horizon=0.01, rho=2700, E=70e9, Gc=100)","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"As loading condition for the specimen, a constant velocity of 06  mathrmmmathrms^-1 in x-direction is set for the bottom and top. Note, that element sets defined in Abaqus are converted to point_sets of the PointCloud.","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"bcs = [\n    VelocityBC(t -> -0.6, pc.point_sets[\"bottom\"], 1),\n    VelocityBC(t -> 0.6, pc.point_sets[\"top\"], 1),\n]","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"We set the number of time steps for the Velocity Verlet algorithm to 500 time steps.","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"vv = VelocityVerlet(500)","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"The results of our analysis should be saved in the directory \"results/TensileTestDynamic\" every 10'th time step.","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"name = \"TensileTestDynamic\"\npath = joinpath(\"results\", name)\n!ispath(path) && mkpath(path) # create the path if it does not exist\nes = ExportSettings(path, 10)","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"Run a single body analysis:","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"job = PDSingleBodyAnalysis(name=name, pc=pc, mat=mat, bcs=bcs, td=vv, es=es)","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"submit(job)","category":"page"},{"location":"generated/tutorial_tension_dynfrac/","page":"Mode I tension dynamic with fracture","title":"Mode I tension dynamic with fracture","text":"(Image: ) (Visualization made with ParaView)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"EditURL = \"../literate/tutorial_tension_precrack.jl\"","category":"page"},{"location":"generated/tutorial_tension_precrack/#tutorial_tension_precrack","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"","category":"section"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"Import the package:","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"using Peridynamics","category":"page"},{"location":"generated/tutorial_tension_precrack/#Spatial-Discretization","page":"Mode I tension with predefined crack","title":"Spatial Discretization","text":"","category":"section"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"To begin, let's define our geometry. In this example, we will create a point cloud consisting of 50 times 50 times 5 material points. The edge length of this block is l = 1textmm, with a thickness of frac110l.","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"l = 1.0\nΔx = l / 50\npc = PointCloud(l, l, 0.1l, Δx)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"(Image: )","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"Define a continuum-based material with","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"Horizon delta = 3Delta x\nDensity rho = 8e-6mathrmkgmathrmmm^-3\nYoungs modulus E = 210 000  mathrmMPa\nPoisson ratio nu = frac14\nGriffith's parameter G_c = 27  mathrmN  mathrmmm^-1","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"δ = 3.015Δx\nmat = CPDMaterial(horizon=δ, rho=8e-6, E=2.1e5, nu=0.25, Gc=2.7)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"To add a predefined crack with length a, we use two point sets.","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"a = 0.5l\nset_a = findall(p -> p[1] ≤ -l/2+a && 0 ≤ p[2] ≤ 2δ, eachcol(pc.position))\nset_b = findall(p -> p[1] ≤ -l/2+a && -2δ ≤ p[2] < 0, eachcol(pc.position))\nprecrack = PreCrack(set_a, set_b)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"(Image: )","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"Additional point sets for the bottom and the top are used for the velocity boundary condition of pm 20  mathrmmm  mathrms^-1.","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"set_top = findall(p -> p[2] > l/2-Δx, eachcol(pc.position))\nset_bottom = findall(p -> p[2] < -l/2+Δx, eachcol(pc.position));\nnothing #hide","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"bc_bottom = VelocityBC(t -> -20, set_bottom, 2)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"bc_top = VelocityBC(t -> 20, set_top, 2)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"(Image: )","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"We set the number of time steps for the Velocity Verlet algorithm to 2000 time steps.","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"vv = VelocityVerlet(2000)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"The results of our analysis should be saved in the directory \"results/mode_I_tension_precrack\" every 10'th time step.","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"jobname = \"mode_I_tension_precrack\"\npath = joinpath(\"results\", jobname)\n!ispath(path) && mkpath(path) # create the path if it does not exist\nes = ExportSettings(path, 10)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"Run a single body analysis:","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"job = PDSingleBodyAnalysis(name=jobname, pc=pc, mat=mat, precracks=[precrack],\n                           bcs=[bc_bottom,bc_top], td=vv, es=es)","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"submit(job)","category":"page"},{"location":"generated/tutorial_tension_precrack/#Displacement-results:","page":"Mode I tension with predefined crack","title":"Displacement results:","text":"","category":"section"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"(Image: )","category":"page"},{"location":"generated/tutorial_tension_precrack/#Damage-results:","page":"Mode I tension with predefined crack","title":"Damage results:","text":"","category":"section"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"(Image: )","category":"page"},{"location":"generated/tutorial_tension_precrack/","page":"Mode I tension with predefined crack","title":"Mode I tension with predefined crack","text":"(Visualizations made with ParaView)","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"(Image: )","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"(Visualization made with ParaView)","category":"page"},{"location":"tutorial_logo/#tutorial_logo","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"","category":"section"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"The Julia logo crashing into a plate and braking it into many pieces.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"First, we have to load the Peridynamics.jl package.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"using Peridynamics","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"Now we create the plate in the background by specifying the dimensions and the point spacing.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"# PLATE - INDEX: p\ndimXYₚ = 0.1 # [m]\ndimZₚ = 0.01 # [m]\nΔxₚ = dimXYₚ/50 # [m]\npcₚ = PointCloud(dimXYₚ, dimXYₚ, dimZₚ, Δxₚ)","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"A cubic point cloud is assembled, and only the points inside a specified radius are preserved to create the spheres of the logo. These points are then copied three times and moved to the correct position to represent the logo.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"# SPHERES OF LOGO - INDEX: s\nØₛ = 0.03 # [m]\nVₛ = 4 / 3 * π * (Øₛ / 2)^3 # [m³]\nΔxₛ = Øₛ / 20 # [m]\npcₛ₀ = PointCloud(Øₛ, Øₛ, Øₛ, Δxₛ)\nsphere_point_set = @views findall(\n    sqrt.(\n        pcₛ₀.position[1, :] .^ 2 + pcₛ₀.position[2, :] .^ 2 + pcₛ₀.position[3, :] .^ 2\n    ) .<= Øₛ / 2,\n)\npcₛ₀.position[3, sphere_point_set] .+= Øₛ / 2 + dimZₚ / 2 + 1.1Δxₚ\npcₛ₁ = PointCloud(pcₛ₀.position[:, sphere_point_set], pcₛ₀.volume[sphere_point_set])\npcₛ₂ = deepcopy(pcₛ₁)\npcₛ₃ = deepcopy(pcₛ₁)\nrₗ = Øₛ / 2 + 0.2 * Øₛ\npcₛ₁.position[2, :] .+= rₗ\npcₛ₂.position[1, :] .+= rₗ * cos(30π / 180)\npcₛ₂.position[2, :] .-= rₗ * sin(30π / 180)\npcₛ₃.position[1, :] .-= rₗ * cos(30π / 180)\npcₛ₃.position[2, :] .-= rₗ * sin(30π / 180)","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"Different material properties are used for the plate and the spheres.","category":"page"},{"location":"tutorial_logo/#Plate","page":"Peridynamics.jl Logo","title":"Plate","text":"","category":"section"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"Horizon delta = 3015 Delta x_p\nDensity rho = 2000mathrmkgmathrmm^-3\nYoungs modulus E = 30 times 10^9  mathrmPa\nGriffith's parameter G_c = 10  mathrmN  mathrmm^-1","category":"page"},{"location":"tutorial_logo/#Julia-logo-spheres","page":"Peridynamics.jl Logo","title":"Julia-logo spheres","text":"","category":"section"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"Horizon delta = 3015 Delta x_s\nDensity rho = 7850mathrmkgmathrmm^-3\nYoungs modulus E = 210 times 10^9  mathrmPa\nGriffith's parameter G_c = 1000  mathrmN  mathrmm^-1","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"matₚ = BBMaterial(;\n    horizon=3.015Δxₚ,\n    rho=2000.0,\n    E=30e9,\n    Gc=10.0,\n)\nmatₛ = BBMaterial(;\n    horizon=3.015Δxₛ,\n    rho=7850.0,\n    E=210e9,\n    Gc=1000.0,\n)","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"All material points of the spheres have a initial velocity of -20 mathrmm  mathrms^-1 in z-direction.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"icₛ = [VelocityIC(-20.0, 1:pcₛ₁.n_points, 3)]","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"For the contact analysis, every body needs to be specified with a BodySetup. Time can be saved by using only one sphere for the calculation of the stable time step.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"plate = BodySetup(pcₚ, matₚ)\nsphere1 = BodySetup(pcₛ₁, matₛ; ics=icₛ)\nsphere2 = BodySetup(pcₛ₂, matₛ; ics=icₛ, calc_timestep=false)\nsphere3 = BodySetup(pcₛ₃, matₛ; ics=icₛ, calc_timestep=false)\nbody_setup = [plate, sphere1, sphere2, sphere3]","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"Contact between the plate and the three spheres needs to be specified.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"contact = [Contact((1, 2), Δxₚ), Contact((1, 3), Δxₚ), Contact((1, 4), Δxₚ)]","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"For this simulation, 3000 time steps with explicit time integration and the velocity verlet algorithm are used.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"td = VelocityVerlet(3000)","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"Now we give the simulation a name and create a directory for the results. ","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"simulation_name = \"Logo\"\nresfolder = joinpath(@__DIR__, \"results\", simulation_name)\nmkpath(resfolder)\nes = ExportSettings(resfolder, 10)","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"To complete everything, the PDContactAnalysis is created and submitted for simulation.","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"job = PDContactAnalysis(;\n    name=simulation_name, body_setup=body_setup, contact=contact, td=td, es=es\n)","category":"page"},{"location":"tutorial_logo/","page":"Peridynamics.jl Logo","title":"Peridynamics.jl Logo","text":"results = submit(job);","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"EditURL = \"../literate/tutorial_tension_static.jl\"","category":"page"},{"location":"generated/tutorial_tension_static/#tutorial_tension_static","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"","category":"section"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"Import the package:","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"using Peridynamics","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"Read and convert the Abaqus FEM mesh of a tensile test:","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"# insert your correct path to the downloaded mesh file!\npc = read_inp(joinpath(@__DIR__, \"..\", \"assets\", \"TensileTestMesh.inp\"))","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"(Image: )","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"Do not allow failure in the entire point cloud:","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"pc.failure_flag .= false","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"Define a bond-based material with","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"Horizon delta = 001mathrmm\nDensity rho = 2700mathrmkgmathrmm^-3\nYoungs modulus E = 70 times 10^9  mathrmPa\nGriffith's parameter G_c = 100  mathrmN  mathrmm^-1","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"mat = BBMaterial(; horizon=0.01, rho=2700, E=70e9, Gc=100)","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"As loading condition for the specimen, a constant force density of 1 times 10^9  mathrmNmathrmm^-3 in x-direction is set for the bottom and top. Note, that element sets defined in Abaqus are converted to point_sets of the PointCloud.","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"bcs = [\n    ForceDensityBC(t -> -1e9, pc.point_sets[\"bottom\"], 1),\n    ForceDensityBC(t -> 1e9, pc.point_sets[\"top\"], 1),\n]","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"We set the number of time steps for the dynamic relaxation algorithm to 500 time steps.","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"dr = DynamicRelaxation(500)","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"The results of our analysis should be saved in the directory \"results/TensileTestStatic\" every 10'th time step.","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"name = \"TensileTestStatic\"\npath = joinpath(\"results\", name)\n!ispath(path) && mkpath(path) # create the path if it does not exist\nes = ExportSettings(path, 10)","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"Run a single body analysis:","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"job = PDSingleBodyAnalysis(name=name, pc=pc, mat=mat, bcs=bcs, td=dr, es=es)","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"submit(job)","category":"page"},{"location":"generated/tutorial_tension_static/","page":"Mode I tension quasi-static","title":"Mode I tension quasi-static","text":"(Image: ) (Visualization made with ParaView)","category":"page"},{"location":"crackedplateundertension/#cracked-plate-under-tension","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"","category":"section"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"The complete script for this tutorial can be found here: CrackedPlateUnderTension.jl.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"First, we have to load the Peridynamics.jl package.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"using Peridynamics","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"Now whe have the exported types and methods available in the namespace. This allows us to construct a PointCloud by specifying the dimensions and the point spacing Delta x.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"length_x = 0.05 # [m]\nlength_y = 0.05 # [m]\nlength_z = 0.005 # [m]\nΔx = length_y / 60 # point spacing: 60 points along y-describe_interactions\npc = PointCloud(length_x, length_y, length_z, Δx)","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"As next step, we define the material with the parameters horizon (horizon delta in peridynamics theory), density rho, youngs modulus E and critical energy release rate Gc.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"mat = BBMaterial(;\n    horizon = 3.015Δx, # [m]\n    rho = 7850.0, # [kg/m^3]\n    E = 210e9, # [N/m^2]\n    Gc = 1000.0, # [N/m]\n)","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"Now we want the plate to have a crack from the left side to the middle. Therefore we need to specify a PreCrack object. A PreCrack is simply two Vector{Int}'s containing point indices. Points in point_id_set_a don't interact with points in  point_id_set_b. So we need to specify all points above and below the crack, as seen in the following image:","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"<img src=\"https://github.com/kaipartmann/Peridynamics.jl/blob/main/docs/src/assets/CrackedPlateUnderTension0.png?raw=true\" width=\"600\" />","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"(Visualization made with ParaView)","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"cracklength = 0.5 * length_x\nprecrack_set_a = findall(\n    (pc.position[2, :] .>= 0) .&\n    (pc.position[2, :] .< 12 * Δx) .&\n    (pc.position[1, :] .<= -length_x / 2 + cracklength),\n)\nprecrack_set_b = findall(\n    (pc.position[2, :] .<= 0) .&\n    (pc.position[2, :] .> -12 * Δx) .&\n    (pc.position[1, :] .<= -length_x / 2 + cracklength),\n)\nprecracks = [PreCrack(precrack_set_a, precrack_set_b)]","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"The PreCrack is then wrapped inside a Vector because PDSingleBodyAnalysis needs a Vector{PreCrack} in case you have multiple predefined cracks in your model.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"Now we specify boundary conditions, so the crack has to grow under the load applied to the plate. Therefore, we want the five rows of points in the upper and lower part of the plate to have a constant velocity of 01fracmathrmmmathrms in the positive and negative y-direction to pull the plate apart.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"bc_set_top = findall(pc.position[2,:] .> length_y / 2 - 5.1 * Δx)\nbc_set_bottom = findall(pc.position[2,:] .< -length_y / 2 + 5.1 * Δx)\nbc_top = VelocityBC(t -> 0.1, bc_set_top, 2)\nbc_bottom = VelocityBC(t -> -0.1, bc_set_bottom, 2)\nboundary_conditions = [bc_top, bc_bottom]","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"Now we specify the temporal discretization. Our simulation should run for 2000 time steps and the stable time step should be calculated.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"td = TimeDiscretization(2000)","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"To save the results, we specify with ExportSettings that every 10 timesteps, the results should be saved to a folder named results/CrackedPlateUnderTension.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"simulation_name = \"CrackedPlateUnderTension\"\nresfolder = joinpath(@__DIR__, \"results\", simulation_name)\nmkpath(resfolder)\nes = ExportSettings(resfolder, 10)","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"Now everything needed for the PDSingleBodyAnalysis is defined.","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"job = PDSingleBodyAnalysis(\n    name = simulation_name,\n    pc = pc,\n    mat = mat,\n    precracks = precracks,\n    bcs = boundary_conditions,\n    td = td,\n    es = es,\n)","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"results = submit(job);","category":"page"},{"location":"crackedplateundertension/#Results-after-2000-timesteps:","page":"CrackedPlateUnderTension.jl","title":"Results after 2000 timesteps:","text":"","category":"section"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"<img src=\"https://github.com/kaipartmann/Peridynamics.jl/blob/main/docs/src/assets/CrackedPlateUnderTension2000.png?raw=true\" width=\"600\"/>","category":"page"},{"location":"crackedplateundertension/","page":"CrackedPlateUnderTension.jl","title":"CrackedPlateUnderTension.jl","text":"(Visualization made with ParaView)","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"EditURL = \"../literate/howto_matformulations.jl\"","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"using Peridynamics #hide","category":"page"},{"location":"generated/howto_matformulations/#howto_matformulations","page":"Material formulations","title":"Material formulations","text":"","category":"section"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"In peridynamics multiple material formulations exist. In this package, currently two peridynamics formulations are implemented:","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"BBMaterial\nCPDMaterial","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"Please refer to","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"Silling (2000)\nSilling et al. (2007)\nJavili, McBride and Steinmann (2019)","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"for further details on the theoretical aspects of these peridynamics formulations.","category":"page"},{"location":"generated/howto_matformulations/#Bond-based-peridynamics","page":"Material formulations","title":"Bond-based peridynamics","text":"","category":"section"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"The bond-based formulation was the first peridynamics model. It has the built-in limitation to a Poisson-ration of nu=14. Otherwise you can specify the horizon  delta, density rho, Young's modulus E and either the critical energy release rate mathcalG_c or the critical bond strain varepsilon_c. All other needed parameters are then calculated.","category":"page"},{"location":"generated/howto_matformulations/#Examples-bond-based-material","page":"Material formulations","title":"Examples bond-based material","text":"","category":"section"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"mat = BBMaterial(horizon=1, rho=8e-6, E=2.1e5, Gc=2)","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"mat = BBMaterial(horizon=1, rho=8e-6, E=2.1e5, epsilon_c=0.01)","category":"page"},{"location":"generated/howto_matformulations/#Continuum-kinematics-based-peridynamics","page":"Material formulations","title":"Continuum-kinematics-based peridynamics","text":"","category":"section"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"The continuum-kinematics-based (also called continuum-kinematics-inspired) formulation has in it's core formulas three material parameters C_1, C_2, and C_3. Ekiz et al. found, that","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"C_1 = frac30  mupi  delta^4  ","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"C_2 = 0  ","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"C_3 = frac32pi^4  delta^12 (lambda-mu)  ","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"with the first and second Lamé parameters lambda and mu and the horizon delta.","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"danger: Manual definition of the interaction parameters\nUsers can manually specify the interaction parameters C_1, C_2, and C_3. The values of the arguments E and nu are then ignored for the simulation! However, for the calculation of Gc or epsilon_c, they still have to be specified when creating a CPDMaterial instance! Be careful if you use this!","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"mat = CPDMaterial(horizon=1, rho=8e-6, E=2.1e5, nu=0.25, Gc=2)","category":"page"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"mat = CPDMaterial(horizon=1, rho=8e-6, E=2.1e5, nu=0.25, epsilon_c=0.02, C1=1e10)","category":"page"},{"location":"generated/howto_matformulations/#Multiple-material-properties-within-one-body","page":"Material formulations","title":"Multiple material properties within one body","text":"","category":"section"},{"location":"generated/howto_matformulations/","page":"Material formulations","title":"Material formulations","text":"With the MultiMaterial type it is possible to define multiple material properties for one single body. Just replace the material definition with a MultiMaterial instance.","category":"page"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"EditURL = \"../literate/howto_contact_analysis.jl\"","category":"page"},{"location":"generated/howto_contact_analysis/#howto_contact_analysis","page":"Contact analysis","title":"Contact analysis","text":"","category":"section"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"Short guide on how to run a peridynamic analysis with contact of multiple bodies.","category":"page"},{"location":"generated/howto_contact_analysis/#Steps","page":"Contact analysis","title":"Steps","text":"","category":"section"},{"location":"generated/howto_contact_analysis/#1.-Define-the-bodies","page":"Contact analysis","title":"1. Define the bodies","text":"","category":"section"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"To define the bodies, create BodySetup instances. Each BodySetup is created with step 1-4 from single body analysis guide. Optionally choose if a body should contribute to the automatic calculation of the stable time step with the calc_timestep keyword. Be careful if you use this option!","category":"page"},{"location":"generated/howto_contact_analysis/#2.-Define-contact","page":"Contact analysis","title":"2. Define contact","text":"","category":"section"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"Define the contact of two bodies by creating a Contact instance.","category":"page"},{"location":"generated/howto_contact_analysis/#3.-Choose-temporal-discretization-settings","page":"Contact analysis","title":"3. Choose temporal discretization settings","text":"","category":"section"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"Create a VelocityVerlet instance.","category":"page"},{"location":"generated/howto_contact_analysis/#4.-Choose-export-settings","page":"Contact analysis","title":"4. Choose export settings","text":"","category":"section"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"Create a ExportSettings instance.","category":"page"},{"location":"generated/howto_contact_analysis/#5.-Create-the-simulation-job","page":"Contact analysis","title":"5. Create the simulation job","text":"","category":"section"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"Create a PDContactAnalysis instance and choose a simulation name.","category":"page"},{"location":"generated/howto_contact_analysis/#6.-Run-the-simulation-job","page":"Contact analysis","title":"6. Run the simulation job","text":"","category":"section"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"Run the simulation with the submit function.","category":"page"},{"location":"generated/howto_contact_analysis/#Examples","page":"Contact analysis","title":"Examples","text":"","category":"section"},{"location":"generated/howto_contact_analysis/","page":"Contact analysis","title":"Contact analysis","text":"Please refer to the Peridynamics.jl logo tutorial.","category":"page"},{"location":"api_private/#Private-API","page":"Private API","title":"Private API","text":"","category":"section"},{"location":"api_private/","page":"Private API","title":"Private API","text":"Here, all non-exported types and methods are listed, which the average user does not need when using the package.","category":"page"},{"location":"api_private/","page":"Private API","title":"Private API","text":"","category":"page"},{"location":"api_private/","page":"Private API","title":"Private API","text":"Pages = [\"api_private.md\"]","category":"page"},{"location":"api_private/#Types","page":"Private API","title":"Types","text":"","category":"section"},{"location":"api_private/","page":"Private API","title":"Private API","text":"","category":"page"},{"location":"api_private/#Functions","page":"Private API","title":"Functions","text":"","category":"section"},{"location":"api_private/","page":"Private API","title":"Private API","text":"","category":"page"},{"location":"tensiletest/#TensileTest.jl","page":"TensileTest.jl","title":"TensileTest.jl","text":"","category":"section"},{"location":"tensiletest/#Quickstart","page":"TensileTest.jl","title":"Quickstart","text":"","category":"section"},{"location":"tensiletest/#Code:","page":"TensileTest.jl","title":"Code:","text":"","category":"section"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"using Peridynamics\npointcloud = read_inp(\"TensileTestMesh.inp\")\nmaterial = BBMaterial(; horizon=0.008, rho=2700, E=70e9, Gc=100)\nboundary_conditions = [\n    VelocityBC(t -> -0.8, pointcloud.point_sets[\"bottom\"], 1),\n    VelocityBC(t -> 0.8, pointcloud.point_sets[\"top\"], 1),\n]\njob = PDSingleBodyAnalysis(;\n    name=\"TensileTest\",\n    pc=pointcloud,\n    mat=material,\n    bcs=boundary_conditions,\n    td=TimeDiscretization(500),\n    es=ExportSettings(\"results/TensileTest\", 10),\n)\nsubmit(job)","category":"page"},{"location":"tensiletest/#Results:","page":"TensileTest.jl","title":"Results:","text":"","category":"section"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"<img src=\"https://github.com/kaipartmann/Peridynamics.jl/blob/main/docs/src/assets/TensileTest.png?raw=true\" width=\"600\" />","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"(Visualization made with ParaView)","category":"page"},{"location":"tensiletest/#Step-by-step","page":"TensileTest.jl","title":"Step-by-step","text":"","category":"section"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"The script for this tutorial can be found here: TensileTest.jl.","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"First, we have to load the Peridynamics.jl package.","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"using Peridynamics","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"Now we create a PointCloud by converting the mesh from Abaqus. (Download the mesh)","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"pointcloud = read_inp(\"TensileTestMesh.inp\")","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"<img src=\"https://github.com/kaipartmann/Peridynamics.jl/blob/main/docs/src/assets/TensileTestMesh.png?raw=true\" width=\"600\" />","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"Next, we need to specify material parameters. We define:","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"Horizon delta = 0008mathrmm\nDensity rho = 2700mathrmkgmathrmm^-3\nYoungs modulus E = 70 times 10^9  mathrmPa\nGriffith's parameter G_c = 100  mathrmN  mathrmm^-1","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"material = BBMaterial(; horizon=0.008, rho=2700, E=70e9, Gc=100)","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"As loading condition for the specimen, a constant velocity of 08  mathrmmmathrms^-1 in x-direction is set for the bottom and top. Note, that element sets defined in Abaqus are converted to point_sets of the PointCloud.","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"boundary_conditions = [\n    VelocityBC(t -> -0.8, pointcloud.point_sets[\"bottom\"], 1),\n    VelocityBC(t -> 0.8, pointcloud.point_sets[\"top\"], 1),\n]","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"With these at hand, a PDSingleBodyAnalysis can be constructed and submitted for calculation. We set the number of time steps for the explicit time integration to 500 with TimeDiscretization(500) and define that the results of our analysis should be saved in the directory \"results/TensileTest\" every 10'th time step.","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"job = PDSingleBodyAnalysis(;\n    name=\"TensileTest\",\n    pc=pointcloud,\n    mat=material,\n    bcs=boundary_conditions,\n    td=TimeDiscretization(500),\n    es=ExportSettings(\"results/TensileTest\", 10),\n)\nsubmit(job)","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"The output of submit(job) looks as follows:","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"======================================================================\nPERIDYNAMIC SIMULATION ON 8 THREADS\n======================================================================\nPeridynamic single body analysis: TensileTest\nMaterial parameters:\n  - Number of material points [-]:                               16900\n  - Material model:                                  BBMaterial\n  - Horizon δ [m]:                                               0.008\n  - Density ρ [kg/m³]:                                            2700\n  - Young's modulus E [N/m²]:                                    7e+10\n  - Poisson ratio ν [-]:                                          0.25\n  - Critical bond stretch εc[-]:                           0.000385758\nInteractions:\n  - Number of bonds [-]:                                       6667240\nTotal memory used by body [MB]:                                273.856\nExport setup:\n  - Export frequency:                                               10\n  - Export file name:         examples/results/TensileTest/TensileTest\nTime discretization:\n  - Time step Δt [s]:                                      5.13584e-07\n  - Number of time steps [-]:                                      500\n  - Simulation time horizon [s]:                           0.000256792\nTime integration... 100%|██████████████████████████████| Time: 0:00:13\n✓ Simulation completed after 16.7321 seconds\nResults:\n  - Max. abs. x-displacement [m]:                          0.000434543\n  - Max. abs. y-displacement [m]:                          0.000326501\n  - Max. abs. z-displacement [m]:                          0.000230936\n  - Max. damage [-]:                                                 1","category":"page"},{"location":"tensiletest/#No-fail-zone","page":"TensileTest.jl","title":"No-fail-zone","text":"","category":"section"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"As an improvement to the previous results, we can additionally set a no-fail-zone. It is a common problem for bond-based peridynamics, that to much damage occurs next to the points where boundary conditions apply. With these two lines, failure in the bottom and top of the specimen is disabled:","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"pointcloud.failure_flag[pointcloud.point_sets[\"bottom\"]] .= false\npointcloud.failure_flag[pointcloud.point_sets[\"top\"]] .= false","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"As a result, we have reduced the damage in the bottom and top of the specimen:","category":"page"},{"location":"tensiletest/","page":"TensileTest.jl","title":"TensileTest.jl","text":"<img src=\"https://github.com/kaipartmann/Peridynamics.jl/blob/main/docs/src/assets/TensileTestNoFailZone.png?raw=true\" width=\"600\" />","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"EditURL = \"../literate/howto_precracks.jl\"","category":"page"},{"location":"generated/howto_precracks/#howto_precracks","page":"Predefined cracks","title":"Predefined cracks","text":"","category":"section"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"Short guide on how to define initial cracks.","category":"page"},{"location":"generated/howto_precracks/#Definition-with-two-point-sets","page":"Predefined cracks","title":"Definition with two point sets","text":"","category":"section"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"All interactions of points in set a with points in set b will be set as failed.","category":"page"},{"location":"generated/howto_precracks/#Example","page":"Predefined cracks","title":"Example","text":"","category":"section"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"using Peridynamics #hide\nl = 1.0\na = 0.1l # crack length\nΔx = l / 50\npc = PointCloud(l, l, 0.1l, Δx)","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"(Image: )","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"We define a crack length a and specify the point sets of points that should not interact with each other.","category":"page"},{"location":"generated/howto_precracks/#Conditions-for-the-coordinates-of-the-point-sets","page":"Predefined cracks","title":"Conditions for the coordinates of the point sets","text":"","category":"section"},{"location":"generated/howto_precracks/#First-set:","page":"Predefined cracks","title":"First set:","text":"","category":"section"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"x_p leq -fracl2+a  ","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"0 leq y_p leq 6Delta x  ","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"set_a = findall(p -> p[1] ≤ -l/2+a && 0 ≤ p[2] ≤ 6Δx, eachcol(pc.position))","category":"page"},{"location":"generated/howto_precracks/#Second-set:","page":"Predefined cracks","title":"Second set:","text":"","category":"section"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"x_p leq -fracl2+a  ","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"-6Delta x leq y_p  0  ","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"set_b = findall(p -> p[1] ≤ -l/2+a && -6Δx ≤ p[2] < 0, eachcol(pc.position))","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"(Image: )","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"The initial crack is specified as a PreCrack instance:","category":"page"},{"location":"generated/howto_precracks/","page":"Predefined cracks","title":"Predefined cracks","text":"precrack = PreCrack(set_a, set_b)","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"EditURL = \"../literate/howto_pointclouds.jl\"","category":"page"},{"location":"generated/howto_pointclouds/#howto_pointclouds","page":"Point clouds","title":"Point clouds","text":"","category":"section"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"Short guide on how to define point clouds.","category":"page"},{"location":"generated/howto_pointclouds/#Block-with-uniform-distributed-points","page":"Point clouds","title":"Block with uniform distributed points","text":"","category":"section"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"PointClouds have a method implemented to create a uniform distributed grid of points with lengths lx, ly, lz, and the point spacing Δx.","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"using Peridynamics #hide\nlx1 = 3\nly1 = 1\nlz1 = 1\nΔx = 0.2\npc1 = PointCloud(lx1, ly1, lz1, Δx)","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"(Image: )","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"The optional keyword arguments center_x, center_y, and center_z provide the possibility to specify the position of the PointCloud center. As seen in the image below, pc2 (blue) is positioned with the center-keywords so that it forms a L-shape together with pc1 (red).","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"lx2 = 1\nly2 = 1\nlz2 = 2\npc2 = PointCloud(lx2, ly2, lz2, Δx; center_x=(lx1-lx2)/2, center_z=(lz1+lz2)/2)","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"(Image: )","category":"page"},{"location":"generated/howto_pointclouds/#Merging-of-multiple-point-clouds","page":"Point clouds","title":"Merging of multiple point clouds","text":"","category":"section"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"The point clouds pc1 and pc2 can be merged to create one L-shaped PointCloud for a single body simulation. That can be accomplished with the pcmerge function:","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"pc = pcmerge([pc1, pc2])","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"(Image: )","category":"page"},{"location":"generated/howto_pointclouds/#filtering_points","page":"Point clouds","title":"Filtering of points regarding their position","text":"","category":"section"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"To generate more complicated geometries from a uniform distributed block, points can be filtered out. For example, we want to model a cylinder with diameter textO and thickness t:","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"Ø = 1\nt = 0.1\nΔx = 0.03\npc0 = PointCloud(Ø, Ø, t, Δx)","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"(Image: )","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"Now we filter every point, that lies outside of the cylinder. Therefore, we search for all points that match the condition","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"sqrtx_p^2 + y_p^2 leq fractextO2  ","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"with the x- and y-coordinate x_p and y_p of each point. The variable cyl_id contains the index of each point that matches this condition. Then we create a new point cloud pc using only the points of pc0 specified in cyl_id.","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"cyl_id = findall(p -> sqrt(p[1]^2 + p[2]^2) <= Ø/2, eachcol(pc0.position))\npc = PointCloud(pc0.position[:,cyl_id], pc0.volume[cyl_id])","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"(Image: )","category":"page"},{"location":"generated/howto_pointclouds/#Reading-of-Abaqus-inp-files","page":"Point clouds","title":"Reading of Abaqus inp-files","text":"","category":"section"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"Point clouds can be created by conversion from a FEM mesh. Each element is converted to a material point. The point position is defined as the center of the element, and the point volume as the element volume.","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"To convert a Abaqus FEM mesh to a PointCloud instance, use the read_inp function.","category":"page"},{"location":"generated/howto_pointclouds/","page":"Point clouds","title":"Point clouds","text":"danger: Limitations\nThe AbaqusReader.jl package is used to import the mesh. Currently the type of supported elements is limited to C3D4 (:Tet4) and C3D8 (:Hex8). Only one body per inp-file will be correctly imported as a PointCloud instance.","category":"page"},{"location":"#Peridynamics","page":"Home","title":"Peridynamics","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A high-level Julia package for multithreaded peridynamics simulations","category":"page"},{"location":"#What-is-peridynamics?","page":"Home","title":"What is peridynamics?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Peridynamics is a non-local formulation of continuum mechanics where material points represent the continuum, and the relative displacements and forces are governed by an integro-differential equation that allows discontinuities. As a result, peridynamics is particularly well-suited for dynamic fracture simulations involving numerous cracks.","category":"page"},{"location":"#Who-can-benefit-from-this-package?","page":"Home","title":"Who can benefit from this package?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is designed for anyone interested in performing peridynamics simulations. While the current feature set provides a solid foundation, we are continuously working to enhance and expand the capabilities of Peridynamics.jl. We encourage you to open an issue or submit a pull request to share your feedback or contribute to making this package even more valuable to the community!","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install Peridynamics.jl, follow these steps:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Install Julia from the official Julia website if you haven't already.\nLaunch Julia and open the Julia REPL.\nEnter the package manager by pressing ] in the REPL.\nIn the package manager, type:\nadd Peridynamics\nPress Backspace or Ctrl + C to exit the package manager.","category":"page"},{"location":"#How-to-guides","page":"Home","title":"How-to guides","text":"","category":"section"},{"location":"#How-to-perform-a","page":"Home","title":"How to perform a","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Single body analysis\nContact analysis","category":"page"},{"location":"#How-to-define","page":"Home","title":"How to define","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Point clouds\nPredefined cracks\nMaterial formulations","category":"page"},{"location":"#How-to","page":"Home","title":"How to","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Visualize results with ParaView","category":"page"},{"location":"#Tutorials","page":"Home","title":"Tutorials","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<div class=\"tutorial-grid\"> ","category":"page"},{"location":"","page":"Home","title":"Home","text":"<div class=\"tutorial-element\"> ","category":"page"},{"location":"#[Mode-I-tension-quasi-static](@ref-tutorial_tension_static)","page":"Home","title":"Mode I tension quasi-static","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"</div> ","category":"page"},{"location":"","page":"Home","title":"Home","text":"<div class=\"tutorial-element\"> ","category":"page"},{"location":"#[Mode-I-tension-dynamic](@ref-tutorial_tension_dynfrac)","page":"Home","title":"Mode I tension dynamic","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"</div>","category":"page"},{"location":"","page":"Home","title":"Home","text":"<div class=\"tutorial-element\"> ","category":"page"},{"location":"#[Mode-I-tension-dynamic-with-predefined-crack](@ref-tutorial_tension_precrack)","page":"Home","title":"Mode I tension dynamic with predefined crack","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"</div> ","category":"page"},{"location":"","page":"Home","title":"Home","text":"<div class=\"tutorial-element\"> ","category":"page"},{"location":"#[Peridynamics.jl-logo](@ref-tutorial_logo)","page":"Home","title":"Peridynamics.jl logo","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"</div>","category":"page"},{"location":"","page":"Home","title":"Home","text":"</div>","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Kai Partmann (University of Siegen)\nKerstin Weinberg (University of Siegen)","category":"page"},{"location":"#Acknowledgement","page":"Home","title":"Acknowledgement","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<img src=https://github.com/kaipartmann/Peridynamics.jl/assets/68582683/0d14a65b-4e05-4408-8107-59ac9c1477d2 width=500>","category":"page"},{"location":"","page":"Home","title":"Home","text":"The authors gratefully acknowledge the support of the Deutsche Forschungsgemeinschaft (DFG) under the project WE2525-14/1.","category":"page"}]
}
